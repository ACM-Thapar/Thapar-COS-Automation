dist: xenial
group: edge
jobs:
  include:
    - stage: Tests
      name: Pre-commit Tests
      language: python
      python: '3.7'
      cache: pip
      install:
        - pip install pre-commit
      script:
        - pre-commit run --all-files

    - stage: Build
      name: Build docker Images
      language: node_js
      node_js:
        - 7
      services:
        - docker
      before_install:
        - docker build -f ./client/Dockerfile.dev -t acmthapar/thapar-cos-automation-client ./client
      script:
        - docker build -f ./server/Dockerfile.dev  -t acmthapar/thapar-cos-automation-server ./server
      after_success:
        # - docker build  -t acmthapar/multi-client ./client
        # - docker build  -t acmthapar/multi-nginx ./nginx
        #Login to docker
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
        #push all images to docker hub
        # - docker push acmthapar/multi-client
        # - docker push acmthapar/multi-nginx
        - docker push acmthapar/thapar-cos-automation-server

    - stage: Deploy
      name: Deploy server to heroku
      language: node_js
      node_js:
        - 7
      services:
        - docker
      before_install:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
        - curl https://cli-assets.heroku.com/install.sh | sh
        - docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com #login to registry.heroku.com
      script:
        - docker tag acmthapar/thapar-cos-automation-server registry.heroku.com/$HEROKU_APP/web
      deploy:
        provider: script
        script: docker push registry.heroku.com/$HEROKU_APP/web;
          heroku container:release web --app $HEROKU_APP
        on:
          branch: master
